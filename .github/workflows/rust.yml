# This workflow is meant to be used only with commits to the main branch.

name: Rust CI Flow

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Cargo.**'
  pull_request:
    branches: [ "main", "development" ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Cargo.**'

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt clippy
      - name: Enforce formatting
        run: cargo fmt --check

  build:
    name: Check
    needs: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt clippy
      - name: Build
        run: cargo check --future-incompat-report

  clippy:
    name: Clippy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt clippy
      - name: Linting
        run: cargo clippy --no-deps -- -D warnings

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Tests
        run: cargo test
